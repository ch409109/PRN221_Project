@page
@model BookingTicketOnline.Pages.ManageShowTime.IndexModel
@{
    ViewData["Title"] = "Select Room for Showtime Management";
    Layout = null;
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>@ViewData["Title"]</title>
<link href="~/css/SelectRoom.css" rel="stylesheet" />
	<style>
		/* General Header Styles */
header {
    background-color: #222; /* Dark background for the header */
    padding: 1rem 2rem; /* Padding around the header */
    display: flex;
    align-items: center;
    justify-content: space-between;
    color: #ffffff;
}

/* Logo */
header .logo {
    color: #fff;
    font-size: 1.5rem;
    font-weight: bold;
    text-decoration: none;
    display: flex;
    align-items: center;
}

header .logo i {
    font-size: 1.8rem;
    margin-right: 0.5rem;
}

/* Navbar */
header .navbar {
    display: flex;
    gap: 1rem;
    list-style: none;
}

header .navbar li a {
    color: #ddd;
    text-decoration: none;
    padding: 0.5rem 1rem;
    border-radius: 5px;
    transition: background-color 0.3s;
}

header .navbar li a:hover,
header .navbar li a.home-active {
    background-color: #444;
    color: #fff;
}

/* Profile Dropdown */
.profile-dropdown {
    position: relative;
}

.profile-dropdown .user-name {
    color: #ddd;
    cursor: pointer;
}

.profile-dropdown .dropdown-content {
    display: none;
    position: absolute;
    top: 100%;
    right: 0;
    background-color: #333;
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
    border-radius: 5px;
    overflow: hidden;
}

.profile-dropdown:hover .dropdown-content {
    display: block;
}

.dropdown-content ul {
    list-style: none;
    padding: 0;
    margin: 0;
}

.dropdown-content ul li a {
    display: block;
    color: #ddd;
    padding: 0.5rem 1rem;
    text-decoration: none;
    transition: background-color 0.3s;
}

.dropdown-content ul li a:hover {
    background-color: #444;
    color: #fff;
}

/* Responsive Menu Icon */
#menu-icon {
    display: none; /* Hide menu icon on larger screens */
    color: #ddd;
    font-size: 1.8rem;
    cursor: pointer;
}



    header .navbar li {
        text-align: center;
    }

    #menu-icon {
        display: block;
    }

    /* Show navbar when menu icon is clicked */
    #menu-icon.active + .navbar {
        display: flex;
    }
}

	</style>
</head>
<body>
    <header>
		<a a asp-page="/HomeOwner" class="logo">
			<i class='bx bxs-movie'></i>CineMatic
		</a>
		<div class="bx bx-menu" id="menu-icon"></div>

		<!-- menu  -->
		<ul class="navbar">
			<li><a asp-page="/HomeOwner" class="home">Trang chủ</a></li>
			@if (User.Identity.IsAuthenticated)
			{
				<div class="profile-dropdown">
					<span class="user-name" onclick="toggleDropdown()">Hello, @User.Identity.Name</span>
					<div id="dropdown-menu" class="dropdown-content">
						<ul>
							<li><a asp-page="/ManageRevenue">Quản lý doanh thu</a></li>
							<li><a asp-page="/ManageShowtime">Quản lý suất chiếu</a></li>
                                <li><a asp-page="/ManageDiscount">Quản lý mã giảm giá</a></li>
							<li><a asp-page="/Logout">Đăng xuất</a></li>
						</ul>
					</div>
				</div>
			}
			else
			{
				<!-- Đưa các nút vào trong navbar để chúng nằm cạnh nhau -->
				<li><a asp-page="/Login" class="btn">Đăng nhập</a></li>
				<li><a asp-page="/SignUp" class="btn">Đăng ký</a></li>
			}
		</ul>


	</header>
    <div class="header">Select Room</div>

    <div class="container">
        @foreach (var group in Model.Rooms.GroupBy(r => r.CinemaId))
        {
            <div class="theater-group">
                <div class="theater-name">@group.First().Cinema.Name</div>
                <div class="rooms">
                    @foreach (var room in group)
                    {
                        <div class="room-door">
                            <form method="post">
                                <input type="hidden" name="id" value="@room.Id" />
                                <button type="submit" class="room-button">@room.Name</button>
                            </form>
                        </div>
                    }
                </div>
            </div>
        }
    </div>



<!-- Pagination Controls -->
<div class="pagination">
    @if (Model.CurrentPage > 1)
    {
        <a asp-page-handler="OnGetAsync" asp-route-CurrentPage="@(Model.CurrentPage - 1)">Previous</a>
    }

    @for (int i = 1; i <= Model.TotalPages; i++)
    {
        <a asp-page-handler="OnGetAsync" asp-route-CurrentPage="@i" class="@(Model.CurrentPage == i ? "active" : "")">@i</a>
    }

    @if (Model.CurrentPage < Model.TotalPages)
    {
        <a asp-page-handler="OnGetAsync" asp-route-CurrentPage="@(Model.CurrentPage + 1)">Next</a>
    }
</div>

</body>
</html>
