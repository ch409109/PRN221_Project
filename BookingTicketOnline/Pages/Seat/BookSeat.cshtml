@page
@model BookingTicketOnline.Pages.Seat.BookSeatModel
@{
    Layout = "_Layout";
    ViewData["Title"] = "Select Seats";
}

<div class="container my-5">
    <h2 class="text-center mb-4">Select Your Seats</h2>

    <div class="screen-container text-center mb-5">
        <div class="screen mb-3">SCREEN</div>
        <div class="screen-shadow"></div>
    </div>

    <form method="post" id="seatForm">
        @Html.AntiForgeryToken()
        <div class="seats-container">
            @foreach (var row in Model.Rows)
            {
                <div class="row mb-2">
                    <div class="col-1 row-name">@row.RowName</div>
                    <div class="col seats-row">
                        @foreach (var seat in row.Seats.OrderBy(s =>
                       {
                           var number = int.Parse(s.SeatName.Substring(1));
                           return number;
                       }))
                        {
                            string seatClass = Model.SeatStatuses[seat.Id] == "Booked" ? "booked" :
                            row.Type.ToLower() == "vip" ? "vip" : "regular";

                            <div class="seat-wrapper mx-1">
                                <input type="checkbox"
                                       id="seat_@seat.Id"
                                       name="SelectedSeatIds"
                                       value="@seat.Id"
                                       class="seat-checkbox"
                                @(Model.SeatStatuses[seat.Id] == "Booked" ? "disabled" : "")>
                                <label for="seat_@seat.Id"
                                       class="seat @seatClass"
                                       data-seat-name="@seat.SeatName"
                                       data-type="@row.Type">
                                    @seat.SeatName
                                </label>
                            </div>
                        }
                    </div>
                </div>
            }
        </div>

        <div class="seat-legend mt-4 text-center">
            <div class="d-inline-block mx-3">
                <span class="seat-sample regular"></span>
                <span>Regular (120,000₫)</span>
            </div>
            <div class="d-inline-block mx-3">
                <span class="seat-sample vip"></span>
                <span>VIP (150,000₫)</span>
            </div>
            <div class="d-inline-block mx-3">
                <span class="seat-sample booked"></span>
                <span>Booked</span>
            </div>
        </div>

        <div class="total-amount mt-4 text-center">
            <h4>Total Amount: <span id="totalAmount">0₫</span></h4>
        </div>

        <div class="text-center mt-4">
            <button type="submit" class="btn btn-primary" id="continueBtn" disabled>Continue to Food Selection</button>
        </div>
    </form>
</div>

@section Styles {
    <style>
        .screen-container {
            perspective: 300px;
        }

        .screen {
            background: #fff;
            height: 40px;
            width: 100%;
            margin: 15px 0;
            box-shadow: 0 3px 10px rgba(255,255,255,0.7);
            color: #000;
            display: flex;
            align-items: center;
            justify-content: center;
            transform: rotateX(-30deg);
            z-index: 10;
        }

        .screen-shadow {
            height: 30px;
            background: rgba(0,0,0,0.1);
            margin-top: -30px;
            transform: rotateX(-30deg);
            box-shadow: 0 3px 10px rgba(255,255,255,0.1);
        }

        .seats-container {
            max-width: 800px;
            margin: 0 auto;
        }

        .row-name {
            display: flex;
            align-items: center;
            justify-content: center;
            font-weight: bold;
        }

        .seat-checkbox {
            display: none;
        }

        .seats-row {
            display: grid;
            grid-template-columns: repeat(15, auto); /* hoặc số cột phù hợp với số ghế tối đa */
            gap: 5px;
            justify-content: start;
        }

        .seat {
            display: inline-block;
            width: 35px;
            height: 35px;
            border-radius: 5px;
            background: #444451;
            color: #fff;
            text-align: center;
            line-height: 35px;
            margin: 3px;
            cursor: pointer;
            transition: transform 0.2s;
        }

            .seat.regular {
                background: #444451;
            }

            .seat.vip {
                background: #f1c40f;
            }

            .seat.booked {
                background: #e74c3c;
                cursor: not-allowed;
            }

        .seat-checkbox:checked + .seat {
            background: #2ecc71;
            transform: scale(1.1);
        }

        .seat-sample {
            display: inline-block;
            width: 20px;
            height: 20px;
            border-radius: 3px;
            margin-right: 5px;
            vertical-align: middle;
        }

            .seat-sample.regular {
                background: #444451;
            }

            .seat-sample.vip {
                background: #f1c40f;
            }

            .seat-sample.booked {
                background: #e74c3c;
            }
    </style>
}

@section Scripts {
    <script>
        $(document).ready(function () {
            function updateTotalAmount() {
                const selectedSeats = $('input[name="SelectedSeatIds"]:checked').toArray();
                const seatIds = selectedSeats.map(seat => parseInt(seat.value));

                if (seatIds.length > 0) {
                    const antiforgeryToken = $('input[name="__RequestVerificationToken"]').val();

                    $.ajax({
                        url: '/Seat/BookSeat?handler=CalculateTotal',
                        method: 'GET',
                        traditional: true, // Quan trọng khi gửi mảng
                        data: {
                            // Gửi multiple values cho cùng một parameter name
                            seatIds: seatIds
                        },
                        headers: {
                            'RequestVerificationToken': antiforgeryToken
                        },
                        success: function (response) {
                            if (response && typeof response.total !== 'undefined') {
                                $('#totalAmount').text(response.total.toLocaleString() + '₫');
                                $('#continueBtn').prop('disabled', seatIds.length === 0);

                                // Log để debug
                                console.log('Selected seats:', seatIds);
                                console.log('Total amount:', response.total);
                            } else {
                                console.error('Invalid response format');
                                $('#totalAmount').text('0₫');
                                $('#continueBtn').prop('disabled', true);
                            }
                        },
                        error: function (xhr, status, error) {
                            console.error('Error:', error);
                            console.error('Status:', status);
                            console.error('Response:', xhr.responseText);
                            console.error('Selected seats when error:', seatIds);
                            $('#totalAmount').text('0₫');
                            $('#continueBtn').prop('disabled', true);
                        }
                    });
                } else {
                    $('#totalAmount').text('0₫');
                    $('#continueBtn').prop('disabled', true);
                }
            }

            // Đăng ký sự kiện change cho checkbox
            $(document).on('change', 'input[name="SelectedSeatIds"]', updateTotalAmount);
        });
    </script>
}
